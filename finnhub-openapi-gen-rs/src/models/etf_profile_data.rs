/*
 * Finnhub API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EtfProfileData {
    /// Name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Asset Class.
    #[serde(rename = "assetClass", skip_serializing_if = "Option::is_none")]
    pub asset_class: Option<String>,
    /// Investment Segment.
    #[serde(rename = "investmentSegment", skip_serializing_if = "Option::is_none")]
    pub investment_segment: Option<String>,
    /// AUM.
    #[serde(rename = "aum", skip_serializing_if = "Option::is_none")]
    pub aum: Option<f32>,
    /// NAV.
    #[serde(rename = "nav", skip_serializing_if = "Option::is_none")]
    pub nav: Option<f32>,
    /// NAV currency.
    #[serde(rename = "navCurrency", skip_serializing_if = "Option::is_none")]
    pub nav_currency: Option<String>,
    /// Expense ratio.
    #[serde(rename = "expenseRatio", skip_serializing_if = "Option::is_none")]
    pub expense_ratio: Option<f32>,
    /// Tracking Index.
    #[serde(rename = "trackingIndex", skip_serializing_if = "Option::is_none")]
    pub tracking_index: Option<String>,
    /// ETF issuer.
    #[serde(rename = "etfCompany", skip_serializing_if = "Option::is_none")]
    pub etf_company: Option<String>,
    /// ETF domicile.
    #[serde(rename = "domicile", skip_serializing_if = "Option::is_none")]
    pub domicile: Option<String>,
    /// Inception date.
    #[serde(rename = "inceptionDate", skip_serializing_if = "Option::is_none")]
    pub inception_date: Option<String>,
    /// ETF's website.
    #[serde(rename = "website", skip_serializing_if = "Option::is_none")]
    pub website: Option<String>,
    /// ISIN.
    #[serde(rename = "isin", skip_serializing_if = "Option::is_none")]
    pub isin: Option<String>,
    /// CUSIP.
    #[serde(rename = "cusip", skip_serializing_if = "Option::is_none")]
    pub cusip: Option<String>,
    /// P/E.
    #[serde(rename = "priceToEarnings", skip_serializing_if = "Option::is_none")]
    pub price_to_earnings: Option<f32>,
    /// P/B.
    #[serde(rename = "priceToBook", skip_serializing_if = "Option::is_none")]
    pub price_to_book: Option<f32>,
    /// 30-day average volume.
    #[serde(rename = "avgVolume", skip_serializing_if = "Option::is_none")]
    pub avg_volume: Option<f32>,
    /// ETF's description.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
}

impl EtfProfileData {
    pub fn new() -> EtfProfileData {
        EtfProfileData {
            name: None,
            asset_class: None,
            investment_segment: None,
            aum: None,
            nav: None,
            nav_currency: None,
            expense_ratio: None,
            tracking_index: None,
            etf_company: None,
            domicile: None,
            inception_date: None,
            website: None,
            isin: None,
            cusip: None,
            price_to_earnings: None,
            price_to_book: None,
            avg_volume: None,
            description: None,
        }
    }
}


