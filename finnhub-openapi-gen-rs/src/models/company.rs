/*
 * Finnhub API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Company {
    /// Executive name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Age
    #[serde(rename = "age", skip_serializing_if = "Option::is_none")]
    pub age: Option<i64>,
    /// Title
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// Year appointed
    #[serde(rename = "since", skip_serializing_if = "Option::is_none")]
    pub since: Option<String>,
    /// Sex
    #[serde(rename = "sex", skip_serializing_if = "Option::is_none")]
    pub sex: Option<String>,
    /// Total compensation
    #[serde(rename = "compensation", skip_serializing_if = "Option::is_none")]
    pub compensation: Option<i64>,
    /// Compensation currency
    #[serde(rename = "currency", skip_serializing_if = "Option::is_none")]
    pub currency: Option<String>,
}

impl Company {
    pub fn new() -> Company {
        Company {
            name: None,
            age: None,
            title: None,
            since: None,
            sex: None,
            compensation: None,
            currency: None,
        }
    }
}


