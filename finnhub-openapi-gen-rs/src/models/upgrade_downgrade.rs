/*
 * Finnhub API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UpgradeDowngrade {
    /// Company symbol.
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    /// Upgrade/downgrade time in UNIX timestamp.
    #[serde(rename = "gradeTime", skip_serializing_if = "Option::is_none")]
    pub grade_time: Option<i64>,
    /// From grade.
    #[serde(rename = "fromGrade", skip_serializing_if = "Option::is_none")]
    pub from_grade: Option<String>,
    /// To grade.
    #[serde(rename = "toGrade", skip_serializing_if = "Option::is_none")]
    pub to_grade: Option<String>,
    /// Company/analyst who did the upgrade/downgrade.
    #[serde(rename = "company", skip_serializing_if = "Option::is_none")]
    pub company: Option<String>,
    /// Action can take any of the following values: <code>up(upgrade), down(downgrade), main(maintains), init(initiate), reit(reiterate)</code>.
    #[serde(rename = "action", skip_serializing_if = "Option::is_none")]
    pub action: Option<String>,
}

impl UpgradeDowngrade {
    pub fn new() -> UpgradeDowngrade {
        UpgradeDowngrade {
            symbol: None,
            grade_time: None,
            from_grade: None,
            to_grade: None,
            company: None,
            action: None,
        }
    }
}


