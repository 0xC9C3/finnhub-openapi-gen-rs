/*
 * Finnhub API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PriceTarget {
    /// Company symbol.
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    /// Highes analysts' target.
    #[serde(rename = "targetHigh", skip_serializing_if = "Option::is_none")]
    pub target_high: Option<f32>,
    /// Lowest analysts' target.
    #[serde(rename = "targetLow", skip_serializing_if = "Option::is_none")]
    pub target_low: Option<f32>,
    /// Mean of all analysts' targets.
    #[serde(rename = "targetMean", skip_serializing_if = "Option::is_none")]
    pub target_mean: Option<f32>,
    /// Median of all analysts' targets.
    #[serde(rename = "targetMedian", skip_serializing_if = "Option::is_none")]
    pub target_median: Option<f32>,
    /// Updated time of the data
    #[serde(rename = "lastUpdated", skip_serializing_if = "Option::is_none")]
    pub last_updated: Option<String>,
}

impl PriceTarget {
    pub fn new() -> PriceTarget {
        PriceTarget {
            symbol: None,
            target_high: None,
            target_low: None,
            target_mean: None,
            target_median: None,
            last_updated: None,
        }
    }
}


