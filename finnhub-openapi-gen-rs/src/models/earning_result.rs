/*
 * Finnhub API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EarningResult {
    /// Actual earning result.
    #[serde(rename = "actual", skip_serializing_if = "Option::is_none")]
    pub actual: Option<f32>,
    /// Estimated earning.
    #[serde(rename = "estimate", skip_serializing_if = "Option::is_none")]
    pub estimate: Option<f32>,
    /// Surprise - The difference between actual and estimate.
    #[serde(rename = "surprise", skip_serializing_if = "Option::is_none")]
    pub surprise: Option<f32>,
    /// Surprise percent.
    #[serde(rename = "surprisePercent", skip_serializing_if = "Option::is_none")]
    pub surprise_percent: Option<f32>,
    /// Reported period.
    #[serde(rename = "period", skip_serializing_if = "Option::is_none")]
    pub period: Option<String>,
    /// Company symbol.
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
}

impl EarningResult {
    pub fn new() -> EarningResult {
        EarningResult {
            actual: None,
            estimate: None,
            surprise: None,
            surprise_percent: None,
            period: None,
            symbol: None,
        }
    }
}


