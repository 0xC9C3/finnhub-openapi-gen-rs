/*
 * Finnhub API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CompanyEarningsQualityScoreData {
    /// Period
    #[serde(rename = "period", skip_serializing_if = "Option::is_none")]
    pub period: Option<String>,
    /// Growth Score
    #[serde(rename = "growth", skip_serializing_if = "Option::is_none")]
    pub growth: Option<f32>,
    /// Profitability Score
    #[serde(rename = "profitability", skip_serializing_if = "Option::is_none")]
    pub profitability: Option<f32>,
    /// Cash Generation and Capital Allocation
    #[serde(rename = "cashGenerationCapitalAllocation", skip_serializing_if = "Option::is_none")]
    pub cash_generation_capital_allocation: Option<f32>,
    /// Leverage Score
    #[serde(rename = "leverage", skip_serializing_if = "Option::is_none")]
    pub leverage: Option<f32>,
    /// Total Score
    #[serde(rename = "score", skip_serializing_if = "Option::is_none")]
    pub score: Option<f32>,
    /// Letter Score
    #[serde(rename = "letterScore", skip_serializing_if = "Option::is_none")]
    pub letter_score: Option<String>,
}

impl CompanyEarningsQualityScoreData {
    pub fn new() -> CompanyEarningsQualityScoreData {
        CompanyEarningsQualityScoreData {
            period: None,
            growth: None,
            profitability: None,
            cash_generation_capital_allocation: None,
            leverage: None,
            score: None,
            letter_score: None,
        }
    }
}


