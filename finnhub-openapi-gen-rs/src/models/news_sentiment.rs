/*
 * Finnhub API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct NewsSentiment {
    #[serde(rename = "buzz", skip_serializing_if = "Option::is_none")]
    pub buzz: Option<Box<crate::models::CompanyNewsStatistics>>,
    /// News score.
    #[serde(rename = "companyNewsScore", skip_serializing_if = "Option::is_none")]
    pub company_news_score: Option<f32>,
    /// Sector average bullish percent.
    #[serde(rename = "sectorAverageBullishPercent", skip_serializing_if = "Option::is_none")]
    pub sector_average_bullish_percent: Option<f32>,
    /// Sectore average score.
    #[serde(rename = "sectorAverageNewsScore", skip_serializing_if = "Option::is_none")]
    pub sector_average_news_score: Option<f32>,
    #[serde(rename = "sentiment", skip_serializing_if = "Option::is_none")]
    pub sentiment: Option<Box<crate::models::Sentiment>>,
    /// Requested symbol.
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
}

impl NewsSentiment {
    pub fn new() -> NewsSentiment {
        NewsSentiment {
            buzz: None,
            company_news_score: None,
            sector_average_bullish_percent: None,
            sector_average_news_score: None,
            sentiment: None,
            symbol: None,
        }
    }
}


